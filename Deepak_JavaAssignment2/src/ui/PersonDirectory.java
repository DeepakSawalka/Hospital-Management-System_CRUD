/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;
import static java.lang.constant.ConstantDescs.NULL;
import java.sql.*;
import java.util.Vector;
import java.util.jar.Attributes.Name;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Deepak Sawalka
 */
public class PersonDirectory extends javax.swing.JFrame {

    /**
     * Creates new form PersonDirectory
     */
    private static final String username="root"; 
    private static final String password="Rajkumar123#";
    private static final String dataconn="jdbc:mysql://localhost:3306/connector";
    
    Connection sqlConn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    int q,i,deleteItem;
    String name;
    
    public PersonDirectory() {
        initComponents();
    }

    public void upDateDb()
    {
    try
    {
        Class.forName("com.mysql.cj.jdbc.Driver");
         sqlConn=DriverManager.getConnection(dataconn,username,password);
         pst=sqlConn.prepareStatement("select * from persondetails");
         
         rs=pst.executeQuery();
         ResultSetMetaData stData= rs.getMetaData();
         q=stData.getColumnCount();
         
         DefaultTableModel recordTable=(DefaultTableModel) persondetailstbl.getModel();
         recordTable.setRowCount(0);
         while (rs.next())
         {
            Vector columnData = new Vector();
            
            for(i=1;i<=q;i++)
            {
                columnData.add(rs.getString("Name"));
                columnData.add(rs.getShort("Age"));
                columnData.add(rs.getString("Gender"));
                columnData.add(rs.getString("Contactno"));
                columnData.add(rs.getString("EmailID"));
                columnData.add(rs.getString("Password"));
                columnData.add(rs.getString("ConfirmPassword"));
                
            }
            recordTable.addRow(columnData);
         }
         
} 
    catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    
    }
    
    }  
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        viewbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        persondetailstbl = new javax.swing.JTable();
        nameval = new javax.swing.JLabel();
        confirmpasswordlblr = new javax.swing.JLabel();
        namelblp = new javax.swing.JLabel();
        agelblp = new javax.swing.JLabel();
        genderlblp = new javax.swing.JLabel();
        nametxtp = new javax.swing.JTextField();
        emailidtxtp = new javax.swing.JTextField();
        agetxtp = new javax.swing.JTextField();
        gendertxtp = new javax.swing.JTextField();
        emailidlblp = new javax.swing.JLabel();
        contactlblp = new javax.swing.JLabel();
        passwordtxtp = new javax.swing.JPasswordField();
        contactnotxtp = new javax.swing.JTextField();
        confirmpasswordtxtp = new javax.swing.JPasswordField();
        passwordlblp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        viewbtn.setText("View");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updatebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(viewbtn)
                .addGap(41, 41, 41)
                .addComponent(updatebtn)
                .addGap(48, 48, 48)
                .addComponent(deletebtn)
                .addGap(54, 54, 54))
        );

        backbtn.setText("<<Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        persondetailstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "ContactNo", "EmailID", "Password", "ConfirmPassword"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        persondetailstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                persondetailstblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(persondetailstbl);

        confirmpasswordlblr.setText("Confirm Password");

        namelblp.setText("Name");

        agelblp.setText("Age");

        genderlblp.setText("Gender");

        emailidlblp.setText("Email-ID");

        contactlblp.setText("Contact No");

        passwordlblp.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(532, 532, 532)
                        .addComponent(nameval, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(namelblp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(nametxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gendertxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderlblp)
                            .addComponent(agetxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agelblp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(268, 268, 268)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmpasswordtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmpasswordlblr)
                            .addComponent(emailidlblp)
                            .addComponent(emailidtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordlblp, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactnotxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactlblp, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(nameval)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(namelblp)
                            .addComponent(contactlblp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nametxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactnotxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agelblp)
                            .addComponent(emailidlblp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agetxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailidtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderlblp)
                    .addComponent(passwordlblp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gendertxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(confirmpasswordlblr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmpasswordtxtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(backbtn)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        // TODO add your handling code here:
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
         sqlConn=DriverManager.getConnection(dataconn,username,password);
         pst=sqlConn.prepareStatement("select * from persondetails");
            
             rs=pst.executeQuery();
            DefaultTableModel model=(DefaultTableModel)persondetailstbl.getModel();
            model.setRowCount(0);
            while(rs.next())
            {
                String name=String.valueOf(rs.getString("Name"));
                String age=String.valueOf(rs.getInt("Age"));
                String gender =String.valueOf(rs.getString("Gender"));
                String contactno=String.valueOf(rs.getString("ContactNo"));
                String emailId=String.valueOf(rs.getString("EmailID"));
                String password=String.valueOf(rs.getString("Password"));
                String confirmpassword=String.valueOf(rs.getString("ConfirmPassword"));
                
                String tbdata[]={name,age,gender,contactno,emailId,password,confirmpassword};
                
                model.addRow(tbdata);
            }
            sqlConn.close();
        }
        
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_viewbtnActionPerformed

    private void persondetailstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_persondetailstblMouseClicked
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel) persondetailstbl.getModel();
        int SelectedRows= persondetailstbl.getSelectedRow();
        
        nametxtp.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        agetxtp.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        gendertxtp.setText(RecordTable.getValueAt(SelectedRows, 2).toString());    
        contactnotxtp.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        emailidtxtp.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
        passwordtxtp.setText(RecordTable.getValueAt(SelectedRows, 5).toString());
        confirmpasswordtxtp.setText(RecordTable.getValueAt(SelectedRows, 6).toString());
        
    }//GEN-LAST:event_persondetailstblMouseClicked

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel RecordTable = (DefaultTableModel) persondetailstbl.getModel();
        int SelectedRows= persondetailstbl.getSelectedRow();
        
        try{
            name=RecordTable.getValueAt(SelectedRows, 0).toString();
            deleteItem=JOptionPane.showConfirmDialog(null, "Confirm if you want to delete an item","WARNING",JOptionPane.YES_NO_OPTION);
            if(deleteItem==JOptionPane.YES_OPTION)
            {
              Class.forName("com.mysql.cj.jdbc.Driver");
         sqlConn=DriverManager.getConnection(dataconn,username,password);
         pst=sqlConn.prepareStatement("delete from persondetails where name=?");
         pst.setString(1, name);
         pst.executeUpdate();
         JOptionPane.showMessageDialog(this, "Record Deleted Successfully!!");
         upDateDb();
         
         nametxtp.setText("");
         agetxtp.setText("");
         gendertxtp.setText("");        
         emailidtxtp.setText("");
         contactnotxtp.setText("");
         passwordtxtp.setText("");
         confirmpasswordtxtp.setText("");
         
            }
            
        }
        catch(Exception e ){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        try
    {
        Class.forName("com.mysql.cj.jdbc.Driver");
         sqlConn=DriverManager.getConnection(dataconn,username,password);
         pst=sqlConn.prepareStatement("update persondetails set Name=?,Age=?,Gender=?,ContactNo=?,EmailID=?,Password=?,ConfirmPassword=? ");
         
         pst.setString(1,nametxtp.getText());
         pst.setString(2, agetxtp.getText());
         pst.setString(3, gendertxtp.getText());  
         pst.setString(4, contactnotxtp.getText());
         pst.setString(5, emailidtxtp.getText());
         pst.setString(6, passwordtxtp.getText());
         pst.setString(7, confirmpasswordtxtp.getText());
         pst.executeUpdate();
         JOptionPane.showMessageDialog(this,"Record Updated Successfully");
         upDateDb();
         
    }//GEN-LAST:event_updatebtnActionPerformed
catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    
    }}
    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        
        new System().setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnActionPerformed
                             
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonDirectory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agelblp;
    private javax.swing.JTextField agetxtp;
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel confirmpasswordlblr;
    private javax.swing.JPasswordField confirmpasswordtxtp;
    private javax.swing.JLabel contactlblp;
    private javax.swing.JTextField contactnotxtp;
    private javax.swing.JButton deletebtn;
    private javax.swing.JLabel emailidlblp;
    private javax.swing.JTextField emailidtxtp;
    private javax.swing.JLabel genderlblp;
    private javax.swing.JTextField gendertxtp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel namelblp;
    private javax.swing.JTextField nametxtp;
    private javax.swing.JLabel nameval;
    private javax.swing.JLabel passwordlblp;
    private javax.swing.JPasswordField passwordtxtp;
    private javax.swing.JTable persondetailstbl;
    private javax.swing.JButton updatebtn;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables
}
